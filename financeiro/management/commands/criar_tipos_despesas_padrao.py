from django.core.management.base import BaseCommand
from financeiro.models import TipoDespesa


class Command(BaseCommand):
    help = 'Cria tipos de despesa padr√£o para o sistema'

    def handle(self, *args, **options):
        self.stdout.write(self.style.SUCCESS('=== CRIANDO TIPOS DE DESPESA PADR√ÉO ==='))
        
        tipos_padrao = [
            {
                'nome': 'Aluguel',
                'descricao': 'Aluguel do im√≥vel comercial'
            },
            {
                'nome': 'Luz',
                'descricao': 'Conta de energia el√©trica'
            },
            {
                'nome': '√Ågua',
                'descricao': 'Conta de √°gua e esgoto'
            },
            {
                'nome': 'Internet',
                'descricao': 'Servi√ßo de internet e telefone'
            },
            {
                'nome': 'G√°s',
                'descricao': 'Conta de g√°s encanado ou botij√£o'
            },
            {
                'nome': 'Manuten√ß√£o',
                'descricao': 'Manuten√ß√£o de equipamentos e estrutura'
            },
            {
                'nome': 'Marketing',
                'descricao': 'Publicidade, panfletos e divulga√ß√£o'
            },
            {
                'nome': 'Impostos',
                'descricao': 'Tributos, taxas e contribui√ß√µes'
            },
            {
                'nome': 'Limpeza',
                'descricao': 'Material de limpeza e servi√ßos'
            },
            {
                'nome': 'Seguran√ßa',
                'descricao': 'Sistemas de seguran√ßa e vigil√¢ncia'
            },
            {
                'nome': 'Funcion√°rios',
                'descricao': 'Sal√°rios, benef√≠cios e encargos'
            },
            {
                'nome': 'Fornecedores',
                'descricao': 'Pagamentos a fornecedores diversos'
            }
        ]
        
        criados = 0
        existentes = 0
        
        for tipo_data in tipos_padrao:
            tipo, created = TipoDespesa.objects.get_or_create(
                nome=tipo_data['nome'],
                defaults={
                    'descricao': tipo_data['descricao'],
                    'ativo': True
                }
            )
            
            if created:
                self.stdout.write(
                    self.style.SUCCESS(f'‚úÖ Criado: {tipo.nome}')
                )
                criados += 1
            else:
                self.stdout.write(
                    self.style.WARNING(f'‚ö†Ô∏è  J√° existe: {tipo.nome}')
                )
                existentes += 1
        
        self.stdout.write(self.style.SUCCESS(f'\n=== RESUMO ==='))
        self.stdout.write(f'Tipos criados: {criados}')
        self.stdout.write(f'Tipos existentes: {existentes}')
        self.stdout.write(f'Total: {criados + existentes}')
        
        if criados > 0:
            self.stdout.write(
                self.style.SUCCESS(f'\nüéâ {criados} tipos de despesa foram criados com sucesso!')
            )
        else:
            self.stdout.write(
                self.style.WARNING(f'\n‚ÑπÔ∏è  Todos os tipos de despesa padr√£o j√° existem no sistema.')
            )
